<?xml version="1.0"?>
<doc>
    <assembly>
        <name>DevQuiz.TelegramBot</name>
    </assembly>
    <members>
        <member name="T:DevQuiz.TelegramBot.Configurations.BotConfiguration">
            <summary>
            Configurations for bot
            </summary>
        </member>
        <member name="P:DevQuiz.TelegramBot.Configurations.BotConfiguration.AccessToken">
            <summary>
            Access token for connecting to a telegram bot
            </summary>
        </member>
        <member name="P:DevQuiz.TelegramBot.Configurations.BotConfiguration.Socks5Host">
            <summary>
            Socks 5 host address
            </summary>
        </member>
        <member name="P:DevQuiz.TelegramBot.Configurations.BotConfiguration.Socks5Port">
            <summary>
            Socks 5 port
            </summary>
        </member>
        <member name="T:DevQuiz.TelegramBot.Constants.BotCommands">
            <summary>
            List of bot commands
            </summary>
        </member>
        <member name="F:DevQuiz.TelegramBot.Constants.BotCommands.Start">
            <summary>
            Start command
            </summary>
        </member>
        <member name="T:DevQuiz.TelegramBot.Constants.TypedHttpClients">
            <summary>
            Names of typed https clients
            </summary>
        </member>
        <member name="F:DevQuiz.TelegramBot.Constants.TypedHttpClients.TelegramApi">
            <summary>
            Telegram api http client name
            </summary>
        </member>
        <member name="T:DevQuiz.TelegramBot.Controllers.BotConfigurationController">
            <summary>
            Controller for manage Bot Configuration
            </summary>
        </member>
        <member name="M:DevQuiz.TelegramBot.Controllers.BotConfigurationController.#ctor(System.Net.Http.IHttpClientFactory,Microsoft.Extensions.Options.IOptions{DevQuiz.TelegramBot.Configurations.BotConfiguration},Microsoft.Extensions.Logging.ILogger{DevQuiz.TelegramBot.Controllers.BotConfigurationController})">
            <summary>
            Constructor
            </summary>
            <param name="httpClientFactory">Factory for creating http clients</param>
            <param name="botOptions">Bot options</param>
            <param name="logger">ILogger instance</param>
        </member>
        <member name="M:DevQuiz.TelegramBot.Controllers.BotConfigurationController.SetWebHook(DevQuiz.TelegramBot.Models.InputModels.SetWebHookInputModel)">
            <summary>
            Set web hook for current bot
            </summary>
            <returns></returns>
        </member>
        <member name="T:DevQuiz.TelegramBot.Controllers.UpdateController">
            <summary>
            Update controller
            </summary>
        </member>
        <member name="M:DevQuiz.TelegramBot.Controllers.UpdateController.#ctor(DevQuiz.TelegramBot.Interfaces.IBotMessageService,Microsoft.Extensions.Logging.ILogger{DevQuiz.TelegramBot.Controllers.UpdateController})">
            <summary>
            Constructor
            </summary>
            <param name="botMeggaseService">Service for manage bot messages</param>
            <param name="logger">Logger instance</param>
        </member>
        <member name="M:DevQuiz.TelegramBot.Controllers.UpdateController.Post(Telegram.Bot.Types.Update)">
            <summary>
            Post method for receive messages from Bot (Using webhook)
            </summary>
            <param name="update">New Update from bot</param>
            <returns>Ok Action or error</returns>
        </member>
        <member name="T:DevQuiz.TelegramBot.Extensions.ServiceCollectionExtensions">
            <summary>
            Extensions for IServiceCollection instance
            </summary>
        </member>
        <member name="T:DevQuiz.TelegramBot.Interfaces.IBotMessageService">
            <summary>
            Service for processing messages received from the bot
            </summary>
        </member>
        <member name="M:DevQuiz.TelegramBot.Interfaces.IBotMessageService.ProcessUpdateAsync(Telegram.Bot.Types.Update)">
            <summary>
            Processing a message
            </summary>
            <param name="updateMessage">New message</param>
        </member>
        <member name="T:DevQuiz.TelegramBot.Interfaces.IBotService">
            <summary>
            Service for managing telegram bot client
            </summary>
        </member>
        <member name="P:DevQuiz.TelegramBot.Interfaces.IBotService.Client">
            <summary>
            Instance of telegram bot client
            </summary>
        </member>
        <member name="T:DevQuiz.TelegramBot.Mappers.UserBotMapperProfile`2">
            <summary>
            Mapper profile for convert Telegram User information to Dto
            </summary>
        </member>
        <member name="M:DevQuiz.TelegramBot.Mappers.UserBotMapperProfile`2.#ctor">
            <summary>
                Constructor
            </summary>
        </member>
        <member name="T:DevQuiz.TelegramBot.MediatR.Commands.BaseBotCommand">
            <summary>
                Base bot command
            </summary>
        </member>
        <member name="P:DevQuiz.TelegramBot.MediatR.Commands.BaseBotCommand.Message">
            <summary>
                Message
            </summary>
        </member>
        <member name="P:DevQuiz.TelegramBot.MediatR.Commands.BaseBotCommand.Chat">
            <summary>
                Chat
            </summary>
        </member>
        <member name="M:DevQuiz.TelegramBot.MediatR.Commands.BaseBotCommand.#ctor(Telegram.Bot.Types.Message)">
            <summary>
                Constructor
            </summary>
            <param name="message"> Message </param>
        </member>
        <member name="T:DevQuiz.TelegramBot.MediatR.Commands.StartCommand">
            <summary>
                Command when "/start" received
            </summary>
        </member>
        <member name="M:DevQuiz.TelegramBot.MediatR.Commands.StartCommand.#ctor(Telegram.Bot.Types.Message)">
            <inheritdoc />
        </member>
        <member name="T:DevQuiz.TelegramBot.MediatR.Handlers.StartCommandHandler`2">
            <summary>
                Command "/start" handler
            </summary>
            <typeparam name="TUserDto"> User dto for add or update </typeparam>
            <typeparam name="TKey"> Parameter with unique identifier of entry </typeparam>
        </member>
        <member name="M:DevQuiz.TelegramBot.MediatR.Handlers.StartCommandHandler`2.#ctor(DevQuiz.Libraries.Core.Services.IUserService{`0,`1},AutoMapper.IMapper,DevQuiz.TelegramBot.Interfaces.IBotService)">
            <summary>
                Constructor
            </summary>
            <param name="userService"> Service for manage users </param>
            <param name="mapper"> Mapper instance </param>
        </member>
        <member name="M:DevQuiz.TelegramBot.MediatR.Handlers.StartCommandHandler`2.Handle(DevQuiz.TelegramBot.MediatR.Commands.StartCommand,System.Threading.CancellationToken)">
            <summary>
                Handle command
            </summary>
            <param name="request"> Command </param>
            <param name="cancellationToken"> Cancellation token </param>
            <returns></returns>
        </member>
        <member name="T:DevQuiz.TelegramBot.Models.ApiResults.SetWebHookApiResult">
            <summary>
            Set web hook api result model
            </summary>
        </member>
        <member name="P:DevQuiz.TelegramBot.Models.ApiResults.SetWebHookApiResult.Ok">
            <summary>
            Set web hook status
            </summary>
        </member>
        <member name="P:DevQuiz.TelegramBot.Models.ApiResults.SetWebHookApiResult.Error_code">
            <summary>
            Error code
            </summary>
        </member>
        <member name="P:DevQuiz.TelegramBot.Models.ApiResults.SetWebHookApiResult.Description">
            <summary>
            Description message
            </summary>
        </member>
        <member name="T:DevQuiz.TelegramBot.Models.InputModels.SetWebHookInputModel">
            <summary>
            Input model for set web hook action
            </summary>
        </member>
        <member name="P:DevQuiz.TelegramBot.Models.InputModels.SetWebHookInputModel.WebHookUri">
            <summary>
            Which address will be set as webhook
            </summary>
        </member>
        <member name="T:DevQuiz.TelegramBot.Program">
            <summary>
            App entry point
            </summary>
        </member>
        <member name="M:DevQuiz.TelegramBot.Program.Main(System.String[])">
            <summary>
            Main class
            </summary>
            <param name="args">Application arguments</param>
        </member>
        <member name="M:DevQuiz.TelegramBot.Program.CreateHostBuilder(System.String[])">
            <summary>
            Creating web app host
            </summary>
            <param name="args">Application arguments</param>
            <returns>Web app host object</returns>
        </member>
        <member name="T:DevQuiz.TelegramBot.Services.BotMessageService">
            <inheritdoc cref="T:DevQuiz.TelegramBot.Interfaces.IBotMessageService" />
        </member>
        <member name="M:DevQuiz.TelegramBot.Services.BotMessageService.#ctor(MediatR.IMediator,Microsoft.Extensions.Logging.ILogger{DevQuiz.TelegramBot.Services.BotMessageService})">
            <summary>
                Constructor
            </summary>
            <param name="mediator"> Mediator</param>
            <param name="logger"> Logge r</param>
        </member>
        <member name="M:DevQuiz.TelegramBot.Services.BotMessageService.ProcessUpdateAsync(Telegram.Bot.Types.Update)">
            <inheritdoc cref="M:DevQuiz.TelegramBot.Interfaces.IBotMessageService.ProcessUpdateAsync(Telegram.Bot.Types.Update)" />
        </member>
        <member name="T:DevQuiz.TelegramBot.Services.BotService">
            <inheritdoc cref="T:DevQuiz.TelegramBot.Interfaces.IBotService" />
        </member>
        <member name="P:DevQuiz.TelegramBot.Services.BotService.Client">
            <inheritdoc cref="P:DevQuiz.TelegramBot.Interfaces.IBotService.Client" />
        </member>
        <member name="M:DevQuiz.TelegramBot.Services.BotService.#ctor(Microsoft.Extensions.Options.IOptions{DevQuiz.TelegramBot.Configurations.BotConfiguration})">
            <summary>
            Constructor
            </summary>
            <param name="botConfiguration">IOptions instance of botConfiguration</param>
        </member>
        <member name="T:DevQuiz.TelegramBot.Startup">
            <summary>
            Startup class
            </summary>
        </member>
        <member name="P:DevQuiz.TelegramBot.Startup.Configuration">
            <summary>
            Configuration of web application
            </summary>
        </member>
        <member name="P:DevQuiz.TelegramBot.Startup.WebHostEnvironment">
            <summary>
            Application web host environment
            </summary>
        </member>
        <member name="M:DevQuiz.TelegramBot.Startup.#ctor(Microsoft.Extensions.Configuration.IConfiguration,Microsoft.AspNetCore.Hosting.IWebHostEnvironment)">
            <summary>
            Constructor
            </summary>
            <param name="configuration">IConfiguration instance</param>
            <param name="webHostEnvironment">WebHostEnvironment instance</param>
        </member>
        <member name="M:DevQuiz.TelegramBot.Startup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Method for configure web app services
            </summary>
            <param name="services">Web app services collection</param>
        </member>
        <member name="M:DevQuiz.TelegramBot.Startup.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IWebHostEnvironment)">
            <summary>
             This method gets called by the runtime. Use this method to configure the HTTP request pipeline.
            </summary>
            <param name="app">IApplication Builder object</param>
            <param name="env">IWwbHostEnvironment object</param>
        </member>
    </members>
</doc>
