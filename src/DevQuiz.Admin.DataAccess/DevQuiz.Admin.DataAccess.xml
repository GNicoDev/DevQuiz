<?xml version="1.0"?>
<doc>
    <assembly>
        <name>DevQuiz.Admin.DataAccess</name>
    </assembly>
    <members>
        <member name="T:DevQuiz.Admin.DataAccess.DbContexts.DevQuizDbContext">
            <summary>
                Db context for connecting DevQuiz data
            </summary>
        </member>
        <member name="M:DevQuiz.Admin.DataAccess.DbContexts.DevQuizDbContext.#ctor(Microsoft.EntityFrameworkCore.DbContextOptions{DevQuiz.Admin.DataAccess.DbContexts.DevQuizDbContext})">
            <summary>
                Constructor
            </summary>
            <param name="options">Options for creating DevQuiz context</param>
        </member>
        <member name="P:DevQuiz.Admin.DataAccess.DbContexts.DevQuizDbContext.Users">
            <summary>
                DevQuiz Users
            </summary>
        </member>
        <member name="P:DevQuiz.Admin.DataAccess.DbContexts.DevQuizDbContext.Questions">
            <summary>
                DevQuiz Questions
            </summary>
        </member>
        <member name="P:DevQuiz.Admin.DataAccess.DbContexts.DevQuizDbContext.Categories">
            <summary>
                DevQuiz Categories
            </summary>
        </member>
        <member name="P:DevQuiz.Admin.DataAccess.DbContexts.DevQuizDbContext.Tags">
            <summary>
                DevQuiz Tags
            </summary>
        </member>
        <member name="P:DevQuiz.Admin.DataAccess.DbContexts.DevQuizDbContext.Answers">
            <summary>
                DevQuiz Answers
            </summary>
        </member>
        <member name="M:DevQuiz.Admin.DataAccess.DbContexts.DevQuizDbContext.OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <summary>
                Method executing while models creating
            </summary>
            <param name="modelBuilder">Model builder</param>
        </member>
        <member name="T:DevQuiz.Admin.DataAccess.DbContexts.Factories.DesignTimeDbContextFactory`1">
            <summary>
                Custom db context abstract factory
            </summary>
            <typeparam name="TContext"></typeparam>
        </member>
        <member name="M:DevQuiz.Admin.DataAccess.DbContexts.Factories.DesignTimeDbContextFactory`1.CreateDbContext(System.String[])">
            <summary>
                Создать объект БД
            </summary>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="M:DevQuiz.Admin.DataAccess.DbContexts.Factories.DesignTimeDbContextFactory`1.CreateNewInstance(Microsoft.EntityFrameworkCore.DbContextOptions{`0})">
            <summary>
                Создание нового объекта
            </summary>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:DevQuiz.Admin.DataAccess.DbContexts.Factories.DesignTimeDbContextFactory`1.Create">
            <summary>
                Создание объекта фабрики
            </summary>
            <returns></returns>
        </member>
        <member name="T:DevQuiz.Admin.DataAccess.DbContexts.Factories.DevQuizDesignTimeDbContextFactory">
            <summary>
                DevQuiz db context factory
            </summary>
        </member>
        <member name="M:DevQuiz.Admin.DataAccess.DbContexts.Factories.DevQuizDesignTimeDbContextFactory.CreateNewInstance(Microsoft.EntityFrameworkCore.DbContextOptions{DevQuiz.Admin.DataAccess.DbContexts.DevQuizDbContext})">
            <summary>
                Creating new object
            </summary>
            <param name="options">Db context options</param>
            <returns>Db context instance</returns>
        </member>
        <member name="T:DevQuiz.Admin.DataAccess.Migrations.InitialMigration">
            <summary>
            InitialMigration
            </summary>
            <summary>
            
            </summary>
        </member>
        <member name="M:DevQuiz.Admin.DataAccess.Migrations.InitialMigration.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <summary>
            
            </summary>
            <param name="migrationBuilder"></param>
        </member>
        <member name="M:DevQuiz.Admin.DataAccess.Migrations.InitialMigration.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <summary>
            
            </summary>
            <param name="migrationBuilder"></param>
        </member>
        <member name="M:DevQuiz.Admin.DataAccess.Migrations.InitialMigration.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <summary>
            
            </summary>
            <param name="modelBuilder"></param>
        </member>
        <member name="T:DevQuiz.Admin.DataAccess.Migrations.AddTelegramChatIdForUser">
            <summary>
            
            </summary>
            <summary>
            
            </summary>
        </member>
        <member name="M:DevQuiz.Admin.DataAccess.Migrations.AddTelegramChatIdForUser.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <summary>
            
            </summary>
            <param name="migrationBuilder"></param>
        </member>
        <member name="M:DevQuiz.Admin.DataAccess.Migrations.AddTelegramChatIdForUser.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <summary>
            
            </summary>
            <param name="migrationBuilder"></param>
        </member>
        <member name="M:DevQuiz.Admin.DataAccess.Migrations.AddTelegramChatIdForUser.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <summary>
            
            </summary>
            <param name="modelBuilder"></param>
        </member>
        <member name="T:DevQuiz.Admin.DataAccess.Migrations.LongTelegramChatId">
            <summary>
            
            </summary>
            <summary>
            
            </summary>
        </member>
        <member name="M:DevQuiz.Admin.DataAccess.Migrations.LongTelegramChatId.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <summary>
            
            </summary>
            <param name="migrationBuilder"></param>
        </member>
        <member name="M:DevQuiz.Admin.DataAccess.Migrations.LongTelegramChatId.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <summary>
            
            </summary>
            <param name="migrationBuilder"></param>
        </member>
        <member name="M:DevQuiz.Admin.DataAccess.Migrations.LongTelegramChatId.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <summary>
            
            </summary>
            <param name="modelBuilder"></param>
        </member>
        <member name="T:DevQuiz.Admin.DataAccess.Repositories.GenericRepository`2">
            <summary>
                Base repository class
            </summary>
        </member>
        <member name="M:DevQuiz.Admin.DataAccess.Repositories.GenericRepository`2.#ctor(`0,Microsoft.Extensions.Logging.ILogger{DevQuiz.Admin.DataAccess.Repositories.GenericRepository{`0,`1}})">
            <summary>
                Constructor
            </summary>
            <param name="genericDbContext">Generic db context</param>
            <param name="logger">Logger instance</param>
        </member>
        <member name="M:DevQuiz.Admin.DataAccess.Repositories.GenericRepository`2.GetAll(System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}},System.Func{System.Linq.IQueryable{`1},Microsoft.EntityFrameworkCore.Query.IIncludableQueryable{`1,System.Object}},System.Func{System.Linq.IQueryable{`1},System.Linq.IOrderedQueryable{`1}},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <inheritdoc
                cref="M:DevQuiz.Admin.Core.Repositories.IGenericRepository`1.GetAll(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Func{System.Linq.IQueryable{`0},Microsoft.EntityFrameworkCore.Query.IIncludableQueryable{`0,System.Object}},System.Func{System.Linq.IQueryable{`0},System.Linq.IOrderedQueryable{`0}},System.Nullable{System.Int32},System.Nullable{System.Int32})" />
        </member>
        <member name="M:DevQuiz.Admin.DataAccess.Repositories.GenericRepository`2.List(System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}},System.Func{System.Linq.IQueryable{`1},Microsoft.EntityFrameworkCore.Query.IIncludableQueryable{`1,System.Object}},System.Func{System.Linq.IQueryable{`1},System.Linq.IOrderedQueryable{`1}},System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <inheritdoc
                cref="M:DevQuiz.Admin.Core.Repositories.IGenericRepository`1.List(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Func{System.Linq.IQueryable{`0},Microsoft.EntityFrameworkCore.Query.IIncludableQueryable{`0,System.Object}},System.Func{System.Linq.IQueryable{`0},System.Linq.IOrderedQueryable{`0}},System.Nullable{System.Int32},System.Nullable{System.Int32})" />
        </member>
        <member name="M:DevQuiz.Admin.DataAccess.Repositories.GenericRepository`2.ListAsync(System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}},System.Func{System.Linq.IQueryable{`1},Microsoft.EntityFrameworkCore.Query.IIncludableQueryable{`1,System.Object}},System.Func{System.Linq.IQueryable{`1},System.Linq.IOrderedQueryable{`1}},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc
                cref="M:DevQuiz.Admin.Core.Repositories.IGenericRepository`1.ListAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Func{System.Linq.IQueryable{`0},Microsoft.EntityFrameworkCore.Query.IIncludableQueryable{`0,System.Object}},System.Func{System.Linq.IQueryable{`0},System.Linq.IOrderedQueryable{`0}},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)" />
        </member>
        <member name="M:DevQuiz.Admin.DataAccess.Repositories.GenericRepository`2.GetOne(System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}},System.Func{System.Linq.IQueryable{`1},Microsoft.EntityFrameworkCore.Query.IIncludableQueryable{`1,System.Object}})">
            <inheritdoc
                cref="M:DevQuiz.Admin.Core.Repositories.IGenericRepository`1.GetOne(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Func{System.Linq.IQueryable{`0},Microsoft.EntityFrameworkCore.Query.IIncludableQueryable{`0,System.Object}})" />
        </member>
        <member name="M:DevQuiz.Admin.DataAccess.Repositories.GenericRepository`2.GetOneAsync(System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}},System.Func{System.Linq.IQueryable{`1},Microsoft.EntityFrameworkCore.Query.IIncludableQueryable{`1,System.Object}},System.Threading.CancellationToken)">
            <inheritdoc
                cref="M:DevQuiz.Admin.Core.Repositories.IGenericRepository`1.GetOneAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Func{System.Linq.IQueryable{`0},Microsoft.EntityFrameworkCore.Query.IIncludableQueryable{`0,System.Object}},System.Threading.CancellationToken)" />
        </member>
        <member name="T:DevQuiz.Admin.DataAccess.Repositories.GenericRepositoryBase`2">
            <summary>
                Generic base repository implementation
            </summary>
            <typeparam name="TDbContext">TDBContext instance</typeparam>
            <typeparam name="TEntity">Entity instance</typeparam>
        </member>
        <member name="M:DevQuiz.Admin.DataAccess.Repositories.GenericRepositoryBase`2.#ctor(`0,Microsoft.Extensions.Logging.ILogger{DevQuiz.Admin.DataAccess.Repositories.GenericRepository{`0,`1}})">
            <summary>
                Constructor
            </summary>
            <param name="genericDbContext">Generic db context</param>
            <param name="logger">Logger instance</param>
        </member>
        <member name="P:DevQuiz.Admin.DataAccess.Repositories.GenericRepositoryBase`2.DbSet">
            <summary>
                DbSet for current type of TEntity
            </summary>
        </member>
        <member name="M:DevQuiz.Admin.DataAccess.Repositories.GenericRepositoryBase`2.GetAll(System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})">
            <inheritdoc cref="M:DevQuiz.Admin.Core.Repositories.IGenericRepositoryBase`1.GetAll(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})" />
        </member>
        <member name="M:DevQuiz.Admin.DataAccess.Repositories.GenericRepositoryBase`2.Update(`1)">
            <inheritdoc cref="M:DevQuiz.Admin.Core.Repositories.IGenericRepositoryBase`1.Update(`0)" />
        </member>
        <member name="M:DevQuiz.Admin.DataAccess.Repositories.GenericRepositoryBase`2.GetOne(System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})">
            <inheritdoc cref="M:DevQuiz.Admin.Core.Repositories.IGenericRepositoryBase`1.GetOne(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})" />
        </member>
        <member name="M:DevQuiz.Admin.DataAccess.Repositories.GenericRepositoryBase`2.GetQueryableWithFilter(System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})">
            <summary>
                Get query from passed params
            </summary>
            <param name="predicate"></param>
            <returns></returns>
        </member>
        <member name="M:DevQuiz.Admin.DataAccess.Repositories.GenericRepositoryBase`2.List(System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})">
            <inheritdoc cref="M:DevQuiz.Admin.Core.Repositories.IGenericRepositoryBase`1.List(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})" />
        </member>
        <member name="M:DevQuiz.Admin.DataAccess.Repositories.GenericRepositoryBase`2.ListAsync(System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}},System.Threading.CancellationToken)">
            <inheritdoc cref="M:DevQuiz.Admin.Core.Repositories.IGenericRepositoryBase`1.ListAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Threading.CancellationToken)" />
        </member>
        <member name="M:DevQuiz.Admin.DataAccess.Repositories.GenericRepositoryBase`2.Count">
            <inheritdoc cref="M:DevQuiz.Admin.Core.Repositories.IGenericRepositoryBase`1.Count" />
        </member>
        <member name="M:DevQuiz.Admin.DataAccess.Repositories.GenericRepositoryBase`2.Count(System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})">
            <inheritdoc cref="M:DevQuiz.Admin.Core.Repositories.IGenericRepositoryBase`1.Count(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})" />
        </member>
        <member name="M:DevQuiz.Admin.DataAccess.Repositories.GenericRepositoryBase`2.Create(`1)">
            <inheritdoc cref="M:DevQuiz.Admin.Core.Repositories.IGenericRepositoryBase`1.Create(`0)" />
        </member>
        <member name="M:DevQuiz.Admin.DataAccess.Repositories.GenericRepositoryBase`2.CreateAsync(`1,System.Threading.CancellationToken)">
            <inheritdoc cref="M:DevQuiz.Admin.Core.Repositories.IGenericRepositoryBase`1.CreateAsync(`0,System.Threading.CancellationToken)" />
        </member>
        <member name="M:DevQuiz.Admin.DataAccess.Repositories.GenericRepositoryBase`2.Delete(`1)">
            <inheritdoc cref="M:DevQuiz.Admin.Core.Repositories.IGenericRepositoryBase`1.Delete(`0)" />
        </member>
        <member name="M:DevQuiz.Admin.DataAccess.Repositories.GenericRepositoryBase`2.Delete(System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}})">
            <inheritdoc cref="M:DevQuiz.Admin.Core.Repositories.IGenericRepositoryBase`1.Delete(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})" />
        </member>
        <member name="T:DevQuiz.Admin.DataAccess.UnitOfWork`1">
            <inheritdoc cref="T:DevQuiz.Admin.Core.IUnitOfWork" />
        </member>
        <member name="M:DevQuiz.Admin.DataAccess.UnitOfWork`1.#ctor(`0)">
            <summary>
                Constructor
            </summary>
            <param name="dbContext">TDbContext instance</param>
        </member>
        <member name="P:DevQuiz.Admin.DataAccess.UnitOfWork`1.Repositories">
            <summary>
                Set of registered repositories
            </summary>
        </member>
        <member name="M:DevQuiz.Admin.DataAccess.UnitOfWork`1.Commit">
            <inheritdoc cref="M:DevQuiz.Admin.Core.IUnitOfWork.Commit" />
        </member>
        <member name="M:DevQuiz.Admin.DataAccess.UnitOfWork`1.CommitAsync(System.Threading.CancellationToken)">
            <inheritdoc cref="M:DevQuiz.Admin.Core.IUnitOfWork.CommitAsync(System.Threading.CancellationToken)" />
        </member>
        <member name="M:DevQuiz.Admin.DataAccess.UnitOfWork`1.ClearChangeTracker">
            <inheritdoc cref="M:DevQuiz.Admin.Core.IUnitOfWork.ClearChangeTracker" />
        </member>
        <member name="M:DevQuiz.Admin.DataAccess.UnitOfWork`1.GetBaseRepository``1">
            <inheritdoc cref="M:DevQuiz.Admin.Core.IUnitOfWork.GetBaseRepository``1" />
        </member>
        <member name="M:DevQuiz.Admin.DataAccess.UnitOfWork`1.GetRepository``2">
            <inheritdoc cref="M:DevQuiz.Admin.Core.IUnitOfWork.GetRepository``2" />
        </member>
        <member name="M:DevQuiz.Admin.DataAccess.UnitOfWork`1.Dispose">
            <summary>
                Dispose unit of work instance
            </summary>
        </member>
        <member name="M:DevQuiz.Admin.DataAccess.UnitOfWork`1.RegisterRepository``2(``0)">
            <summary>
                Add repository to repository dictionary
            </summary>
            <typeparam name="T"> Base repository </typeparam>
            <typeparam name="TEntity"> Entity </typeparam>
            <param name="source"> Repository instance </param>
            <returns> Registered repository instance </returns>
        </member>
        <member name="T:DevQuiz.Admin.DataAccess.DevQuizUnitOfWork`1">
            <inheritdoc cref="T:DevQuiz.Admin.Core.IDevQuizUnitOfWork" />
        </member>
        <member name="M:DevQuiz.Admin.DataAccess.DevQuizUnitOfWork`1.#ctor(`0,DevQuiz.Admin.Core.Repositories.IGenericRepository{DevQuiz.Admin.Core.Models.Entities.User},DevQuiz.Admin.Core.Repositories.IGenericRepository{DevQuiz.Admin.Core.Models.Entities.Question},DevQuiz.Admin.Core.Repositories.IGenericRepository{DevQuiz.Admin.Core.Models.Entities.Answer},DevQuiz.Admin.Core.Repositories.IGenericRepository{DevQuiz.Admin.Core.Models.Entities.Category},DevQuiz.Admin.Core.Repositories.IGenericRepository{DevQuiz.Admin.Core.Models.Entities.Tag})">
            <summary>
                Constructor
            </summary>
            <param name="genericDbContext">Current db context</param>
            <param name="userRepository">User repository instance</param>
            <param name="questionRepository">Question repository instance</param>
            <param name="answerRepository">Answer repository instance</param>
            <param name="categoryRepository">Category repository instance</param>
            <param name="tagRepository">Tag repository instance</param>
        </member>
        <member name="P:DevQuiz.Admin.DataAccess.DevQuizUnitOfWork`1.UserRepository">
            <summary>
                User repository
            </summary>
        </member>
        <member name="P:DevQuiz.Admin.DataAccess.DevQuizUnitOfWork`1.QuestionRepository">
            <summary>
                Question repository
            </summary>
        </member>
        <member name="P:DevQuiz.Admin.DataAccess.DevQuizUnitOfWork`1.CategoryRepository">
            <summary>
                Category repository
            </summary>
        </member>
        <member name="P:DevQuiz.Admin.DataAccess.DevQuizUnitOfWork`1.TagRepository">
            <summary>
                Tag repository
            </summary>
        </member>
        <member name="P:DevQuiz.Admin.DataAccess.DevQuizUnitOfWork`1.AnswerRepository">
            <summary>
                Answer repository
            </summary>
        </member>
        <member name="T:DevQuiz.Admin.DataAccess.DevQuizUserUnitOfWork`1">
            <inheritdoc cref="T:DevQuiz.Admin.Core.IDevQuizUserUnitOfWork" />
        </member>
        <member name="M:DevQuiz.Admin.DataAccess.DevQuizUserUnitOfWork`1.#ctor(`0,DevQuiz.Admin.Core.Repositories.IGenericRepository{DevQuiz.Admin.Core.Models.Entities.User})">
            <summary>
                Constructor
            </summary>
            <param name="genericDbContext">Current db context</param>
            <param name="userRepository">User repository instance</param>
        </member>
        <member name="P:DevQuiz.Admin.DataAccess.DevQuizUserUnitOfWork`1.UserRepository">
            <summary>
                User repository
            </summary>
        </member>
        <member name="T:Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions">
            <summary>
                Extensions for IServiceCollection instance
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions.AddDevQuizDbContexts``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
                Register DbContexts for DevQuiz
            </summary>
            <typeparam name="TDbContext">Target db context</typeparam>
            <param name="services">IServiceCollection instance</param>
            <param name="configuration">IConfiguration instance</param>
            <returns>IServiceCollection</returns>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions.AddDevQuizRepositories``1(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
                Register Repositories for DevQuiz
            </summary>
            <typeparam name="TDbContext">Target db context</typeparam>
            <param name="services">IServiceCollection instance</param>
            <returns>Clear IServiceCollection</returns>
        </member>
    </members>
</doc>
